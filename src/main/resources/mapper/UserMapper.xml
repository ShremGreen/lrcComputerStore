<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace属性:用于指定当前的映射文件和哪个接口进行映射，需要指定接口的文件路径，并标注包的完整路径接口-->
<mapper namespace="com.lrc.store.mapper.UserMapper">

    <!--自定义映射规则：resultMap标签来完成映射规则定义-->
    <!--id属性:标签给这个映射负责分配一个唯一的id值，对应的就是resultMap="id属性的值"属性的取值
        type属性:取值是一个类，表示的是数据库中的查询结果与Java中哪个实体类进行结果集的映射-->

    <resultMap id="UserEntityMap" type="com.lrc.store.entity.User">
            <!--将表的字段和类的属性不一致的字段进行匹配指定，名称一致的字段可以省略不写-->
            <!--配合完成名称不一致的映射:column属性:表示表中的资源名称property属性:表示类中的属性名称-->
            <!--在定义映射规则时主键是不可以省略的-->
            <id column="uid" property="uid"></id>
            <result column="is_delete" property="isDelete"></result>
            <result column="created_User" property="createdUser"></result>
            <result column="created_time" property="createdTime"></result>
            <result column="modified_user" property="modifiedUser"></result>
            <result column="modified_time" property="modifiedTime"></result>
    </resultMap>


    <!--id  表示映射的接口中方法的名称，直接在标签的内部来编写SQl语句

    过程：insert语句通过映射的接口做到和UserMapper内部方法对应
    useGeneratedKeys开启字段递增   keyProperty递增主键-->

    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO t_user (
            username,password,salt,phone,email,gender,avatar,is_delete,
            created_user,created_time,modified_user,modified_time
        ) VALUES (
            /*动态值，需要用占位符进行占位，需要给每个占位符起个专门的名字*/
            #{username},#{password},#{salt},#{phone},#{email},#{gender},#{avatar},#{isDelete},
            #{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime}
        )
    </insert>

    <!--select语句在执行过程中，查询的结果是一个或者多个对象-->
    <!--resultMap:标签表示表中字段和类的对象属性字段名称不一致时，来自查询结果集的映射-->
    <select id="findByUsername" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE username = #{username}
    </select>

    <update id="updatePasswordByUid">
        UPDATE t_user SET
                    password = #{password}, modified_user = #{modifiedUser}, modified_time = #{modifiedTime}
        WHERE uid = ${uid}
    </update>

    <select id="findByUid" resultMap="UserEntityMap">
        SELECT * FROM t_user WHERE uid = #{uid}
    </select>

    <update id="updateInformation">
        UPDATE t_user
        /*if表示条件判断标签，test接收一个返回值为boolean类型的条件，
        如果test条件结果为true则执行标签内部语句*/
        SET <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="gender != null">gender = #{gender},</if>
               modified_user = #{modifiedUser},
               modified_time = #{modifiedTime}
        WHERE uid = ${uid}
    </update>

    <update id = "updateAvatarByUid">
        UPDATE t_user
        SET avatar = #{avatar},
            modified_user = #{modifiedUser},
            modified_time = #{modifiedTime}
        WHERE uid = #{uid}
    </update>
</mapper>